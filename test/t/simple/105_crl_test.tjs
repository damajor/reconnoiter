name = "CRL test"
plan = 5
requires = ['prereq']

'use strict';
var tools = require('./testconfig'),
    nc = require('../../src/js/index'),
    fs = require('fs'),
    async = require('async');


test = function() {
  var test = this;
  var noit = new tools.noit(test, "105",
                            { 'logs_debug': { '': 'false' },
                              'rest_acls': [ { 'type': 'deny',
                                               'rules': [ { 'cn': '.',
                                                            'type': 'allow' }
                                                        ] }
                                           ]
                            });
  var goodconn = noit.get_connection();
  var badconn = noit.get_connection(null, null,
    { 'key': fs.readFileSync('../badclient.key', {encoding:'utf8'}),
      'cert': fs.readFileSync('../badclient.crt', {encoding:'utf8'}) });

  noit.start(function(pid,port) {
    async.parallel([
      function(callback) {
        goodconn.request({'path':'/checks/show/f7cea020-f19d-11dd-85a6-cb6d3a2207dc'},
          function(code) {
            test.is(code,404,'request works with usable key');
            callback();
          });
      },
      function(callback) {
        badconn.request({'path':'/checks/show/f7cea020-f19d-11dd-85a6-cb6d3a2207dc'},
          function(code,data) {
            test.is(code,500,'request fails with revoked key: 500');
            test.like(data,/SSL/,'request fails with revoked key: SSL');
            callback();
          });
      }
    ], function() {
      noit.stop();
    });
  });
}
